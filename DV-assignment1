<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PSI Readings - Data.gov.sg API</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f4f4f4;
      padding: 30px;
      text-align: center;
    }
    h1 {
      color: #333;
    }
    table {
      margin: 20px auto;
      border-collapse: collapse;
      width: 80%;
      background: white;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    th, td {
      border: 1px solid #ddd;
      padding: 10px;
      text-align: center;
    }
    th {
      background: #0078d7;
      color: white;
    }
    #lastUpdated {
      margin-top: 10px;
      color: #555;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <h1>Singapore PSI Readings</h1>
  <table id="psiTable">
    <thead>
      <tr>
        <th>Region</th>
        <th>o3_sub_index</th>
        <th>pm10_twenty_four_hourly</th>
        <th>pm10_sub_index</th>
        <th>co_sub_index</th>
        <th>pm25_twenty_four_hourly</th>
        <th>so2_sub_index</th>
        <th>co_eight_hour_max</th>
        <th>no2_one_hour_max</th>
        <th>so2_twenty_four_hourly</th>
        <th>pm25_sub_index</th>
        <th>psi_twenty_four_hourly</th>
      </tr>
    </thead>
    <tbody id="psiData"></tbody>
  </table>

  <p id="lastUpdated"></p>

  <script>
    async function fetchPSIData() {
      try {
        const response = await fetch('https://api.data.gov.sg/v1/environment/psi');
        const data = await response.json();
        const readings = data.items[0].readings;
        const regions = Object.keys(data.region_metadata);
        const tbody = document.getElementById('psiData');
        const lastUpdated = document.getElementById('lastUpdated');

        tbody.innerHTML = ''; // clear previous data

        regions.forEach((_, i) => {
          const regionName = data.region_metadata[i].name;
          const row = document.createElement('tr');

          const metrics = [
            'o3_sub_index', 'pm10_twenty_four_hourly', 'pm10_sub_index',
            'co_sub_index', 'pm25_twenty_four_hourly', 'so2_sub_index',
            'co_eight_hour_max', 'no2_one_hour_max', 'so2_twenty_four_hourly',
            'pm25_sub_index', 'psi_twenty_four_hourly'
          ];

          row.innerHTML = `<td>${regionName}</td>` + metrics.map(metric => {
            return `<td>${readings[metric][regionName]}</td>`;
          }).join('');

          tbody.appendChild(row);
        });

        lastUpdated.textContent = `Last updated: ${data.items[0].update_timestamp}`;
      } catch (error) {
        console.error('Error fetching PSI data:', error);
      }
    }

    fetchPSIData();
  </script>
</body>
</html>
